<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/data/jpa
           http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <!-- Load database properties -->
    <context:property-placeholder location="classpath:database.properties"/>

    <!-- Enable component scanning for Field Injection -->
    <context:component-scan base-package="com.toctoc.service"/>

    <!-- Enable JPA Repositories -->
    <jpa:repositories
            base-package="com.toctoc.repository"
            entity-manager-factory-ref="entityManagerFactory"
            transaction-manager-ref="transactionManager"/>

    <!-- Enable Transaction Management -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!-- DataSource Configuration -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="jdbcUrl" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <property name="maximumPoolSize" value="10"/>
        <property name="minimumIdle" value="5"/>
        <property name="connectionTimeout" value="30000"/>
        <property name="idleTimeout" value="600000"/>
        <property name="maxLifetime" value="1800000"/>
    </bean>

    <!-- EntityManagerFactory Configuration -->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.toctoc.entity"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="${hibernate.show_sql}"/>
                <property name="generateDdl" value="true"/>
                <property name="databasePlatform" value="${hibernate.dialect}"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.use_sql_comments">true</prop>
            </props>
        </property>
    </bean>

    <!-- Transaction Manager -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- ========================================= -->
    <!-- SERVICE BEANS - DEMONSTRATING 3 INJECTION TYPES AND SCOPES -->
    <!-- ========================================= -->

    <!-- 1. LivreurService - Constructor Injection (SINGLETON scope - default) -->
    <bean id="livreurService" class="com.toctoc.service.LivreurServiceImpl" scope="singleton">
        <constructor-arg ref="livreurRepository"/>
    </bean>

    <!-- 2. ColisService - Setter Injection (SINGLETON scope - default) -->
    <bean id="colisService" class="com.toctoc.service.ColisServiceImpl" scope="singleton">
        <property name="colisRepository" ref="colisRepository"/>
        <property name="livreurRepository" ref="livreurRepository"/>
    </bean>

    <!-- 3. StatistiqueService - Field Injection using @Autowired (PROTOTYPE scope) -->
    <!-- This bean is created fresh each time it's requested -->
    <bean id="statistiqueService" class="com.toctoc.service.StatistiqueServiceImpl" scope="prototype"/>

</beans>